1) When would you want to create a remote repository rather than keeping all your work local?
   When you want to collaborate with other people and work together

2) Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote
   repository?
   Because you should commit when you are sure about a change

3) Describe the differences between forks, clones, and branches. When would you use one instead of another?
   Fork is to clone a repository inside GitHub. Clone is needed to copy repositories from GitHub to your pc or to clone repositories between local pcs. A branch is a commit that outlines the previous commits with special features. Depending on your application, you will use each of these.

4) What is the benefit of having a copy of the last known state of the remote stored locally?
   That you can continue with your local branch and compare it with the remote. When being offline, this is, aside of being a benefit, an advantage.

5) How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
   I would do it by using the mail but would be quite difficult. Definitely with github, collaboration become organized but the hard part is to know how to use it.

6) When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
   When I am collaborating in project with different people. Making changes in a separate branch, allows you to not add mistakes to the master branch, which is considered the "no-error" code and the core of the whole project. Making changes directly to the master branch, is used when you are working by yourself. Although, making changes in a separate branch could be used when working alone.
